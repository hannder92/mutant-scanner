plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "io.freefair.lombok" version "5.3.0"
	id "jacoco"
}

group = 'com.mercardolibre.mutant.dna'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'
targetCompatibility = 11

repositories {
	mavenCentral()
	jcenter()
}

bootJar {
	archiveName 'application.jar'
	launchScript()
}
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'org.springframework.cloud', name: 'spring-cloud-starter', version: '3.0.1'

	//SWAGGER
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
	toolVersion = "0.8.3"
	reportsDir = file("$buildDir/reports/jacoco")
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
	afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					'com/mercadolibre/mutant/scanner/mutantscanner/Mutant*',
					'com/mercadolibre/mutant/scanner/mutantscanner/domain/*',
					'com/mercadolibre/mutant/scanner/mutantscanner/domain/dto/*',
					'com/mercadolibre/mutant/scanner/mutantscanner/domain/db/entity/*',
					'com/mercadolibre/mutant/scanner/mutantscanner/config/*'
			])
		})
	}
}

check.dependsOn test
